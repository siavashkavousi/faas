version: '3.7'

services:

  gateway:
    image: gateway:0.0.1-SNAPSHOT
    ports:
      - target: 8080
        published: 8080
        mode: host
    networks:
      functions:
          aliases:
            - gateway
    deploy:
      resources:
        # limits:   # Enable if you want to limit memory usage
        #     memory: 200M
        reservations:
          memory: 100M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 20
        window: 380s
      placement:
        constraints:
          - "node.platform.os == linux"

  #  swarm-provider:
  #    volumes:
  #      - "/var/run/docker.sock:/var/run/docker.sock"
  #    image: provider/swarm:0.0.1-SNAPSHOT
  #    networks:
  #      - functions
  #    deploy:
  #      placement:
  #        constraints:
  #          - "node.role == manager"
  #          - "node.platform.os == linux"
  #      resources:
  #        # limits:   # Enable if you want to limit memory usage
  #        #     memory: 100M
  #        reservations:
  #          memory: 100M
  #      restart_policy:
  #        condition: on-failure
  #        delay: 5s
  #        max_attempts: 20
  #        window: 380s

  grafana:
    image: grafana/grafana:6.0.2
    ports:
      - target: 3000
        published: 3000
        mode: host
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
    networks:
      functions:
        aliases:
          - grafana

  prometheus:
    image: prom/prometheus:v2.8.1
    ports:
      - target: 9090
        published: 9090
        mode: host
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./config/alert.rules.yml:/etc/prometheus/alert.rules.yml
      - prometheus_data:/prometheus
    networks:
      functions:
        aliases:
          - prometheus
    deploy:
      placement:
        constraints:
          - "node.role == manager"
          - "node.platform.os == linux"
      resources:
        limits:
          memory: 500M
        reservations:
          memory: 200M

  alertmanager:
    image: prom/alertmanager:v0.16.2
    command:
      - "--config.file=/alertmanager.yml"
      - "--storage.path=/alertmanager"
    networks:
      functions:
        aliases:
          - alertmanager
    ports:
      - target: 9093
        published: 9093
        mode: host
    deploy:
      resources:
        limits:
          memory: 50M
        reservations:
          memory: 20M
      placement:
        constraints:
          - "node.role == manager"
          - "node.platform.os == linux"
    volumes:
      - ./config/alertmanager.yml:/alertmanager.yml

networks:
  functions:
    driver: overlay
    attachable: true

volumes:
  prometheus_data:
  grafana_data: